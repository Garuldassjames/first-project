#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for Failed to commit metaspace.
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (virtualSpaceNode.cpp:110), pid=9468, tid=18244
#
# JRE version: OpenJDK Runtime Environment Temurin-17.0.4.1+1 (17.0.4.1+1) (build 17.0.4.1+1)
# Java VM: OpenJDK 64-Bit Server VM Temurin-17.0.4.1+1 (17.0.4.1+1, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 -XX:+ShowCodeDetailsInExceptionMessages maven_pack.maven01.amazon_my_own

Host: Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz, 4 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.2546)
Time: Sat Mar  4 18:58:56 2023 India Standard Time elapsed time: 1.008710 seconds (0d 0h 0m 1s)

---------------  T H R E A D  ---------------

Current thread (0x000001cf31871b90):  JavaThread "main" [_thread_in_vm, id=18244, stack(0x0000002ae6c00000,0x0000002ae6d00000)]

Stack: [0x0000002ae6c00000,0x0000002ae6d00000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x67731a]
V  [jvm.dll+0x832284]
V  [jvm.dll+0x833a2e]
V  [jvm.dll+0x834093]
V  [jvm.dll+0x245775]
V  [jvm.dll+0x82e22b]
V  [jvm.dll+0x61bdf6]
V  [jvm.dll+0x1c07be]
V  [jvm.dll+0x61e741]
V  [jvm.dll+0x61c796]
V  [jvm.dll+0x239e0f]
V  [jvm.dll+0x6265a5]
V  [jvm.dll+0x1ea5db]
V  [jvm.dll+0x1eab15]
V  [jvm.dll+0x1eb54f]
V  [jvm.dll+0x1e09f1]
V  [jvm.dll+0x53c910]
V  [jvm.dll+0x1f11e7]
V  [jvm.dll+0x7ac56b]
V  [jvm.dll+0x7ad912]
V  [jvm.dll+0x7ae0a9]
V  [jvm.dll+0x1eb804]
V  [jvm.dll+0x1e0a0a]
V  [jvm.dll+0x53c910]
V  [jvm.dll+0x1f11e7]
V  [jvm.dll+0x7ac56b]
V  [jvm.dll+0x7ad912]
V  [jvm.dll+0x7adc48]
V  [jvm.dll+0x414208]
C  [java.dll+0x13e9]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  java.lang.Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;+0 java.base@17.0.4.1
j  java.lang.Class.forName(Ljava/lang/String;)Ljava/lang/Class;+11 java.base@17.0.4.1
j  sun.util.locale.provider.LocaleProviderAdapter.forType(Lsun/util/locale/provider/LocaleProviderAdapter$Type;)Lsun/util/locale/provider/LocaleProviderAdapter;+65 java.base@17.0.4.1
j  sun.util.locale.provider.LocaleProviderAdapter.findAdapter(Ljava/lang/Class;Ljava/util/Locale;)Lsun/util/locale/provider/LocaleProviderAdapter;+29 java.base@17.0.4.1
j  sun.util.locale.provider.LocaleProviderAdapter.getAdapter(Ljava/lang/Class;Ljava/util/Locale;)Lsun/util/locale/provider/LocaleProviderAdapter;+55 java.base@17.0.4.1
j  java.text.DateFormatSymbols.getProviderInstance(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;+3 java.base@17.0.4.1
j  java.text.DateFormatSymbols.getInstance(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;+1 java.base@17.0.4.1
j  java.util.Formatter$FormatSpecifier.print(Ljava/lang/StringBuilder;Ljava/time/temporal/TemporalAccessor;CLjava/util/Locale;)Ljava/lang/Appendable;+1052 java.base@17.0.4.1
+15
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
     bool ShowCodeDetailsInExceptionMessages       = true                                   {manageable} {command line}
   size_t SoftMaxHeapSize                          = 2120220672                             {manageable} {ergonomic}
     bool UseCompressedClassPointers               = true                           {product lp64_product} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags
 #1: stderr all=off uptime,level,tags

Environment Variables:
PATH=C:/eclipse-java-2022-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.4.v20220903-1038/jre/bin/server;C:/eclipse-java-2022-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.4.v20220903-1038/jre/bin;C:\Program Files\Python311\Scripts\;C:\Program Files\Python311\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\maven_home\bin;C:\Users\Dell\AppData\Local\Microsoft\WindowsApps;;C:\Users\Dell\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.3.2\bin;;C:\eclipse-java-2022-09-R-win32-x86_64\eclipse;
USERNAME=Dell
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 78 Stepping 3, GenuineIntel
TMP=C:\Users\Dell\AppData\Local\Temp
TEMP=C:\Users\Dell\AppData\Local\Temp



---------------  S Y S T E M  ---------------

OS:
 Windows 10 , 64 bit Build 19041 (10.0.19041.2546)
OS uptime: 3 days 3:33 hours

CPU: total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 78 stepping 3 microcode 0xf0, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt

Memory: 4k page, system-wide physical 8083M (835M free)
TotalPageFile size 10218M (AvailPageFile size 1M)
current process WorkingSet (physical memory assigned to process): 66M, peak: 66M
current process commit charge ("private bytes"): 215M, peak: 215M

vm_info: OpenJDK 64-Bit Server VM (17.0.4.1+1) for windows-amd64 JRE (17.0.4.1+1), built on Aug 17 2022 07:42:43 by "temurin" with MS VC++ 16.7 (VS2019)

END.
