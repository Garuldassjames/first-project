package com.api.client;

import java.util.HashMap;
import java.util.Map;

import com.api.baseclass.Endpoints;
import com.api.baseclass.HTTPSMethods;

import io.restassured.response.Response;

public class SingleUserRepoClients {

	private Map<String, String> validHeader = new HashMap<String, String>();

	private Map<String, String> inValidHeader = new HashMap<String, String>();

	public SingleUserRepoClients() {

		try {

			validHeader.put("Accept", "application/vnd.github+json");
			validHeader.put("Authorization", "Bearer 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");

			inValidHeader.put("Accept", "application/vnd.github+json");
			inValidHeader.put("Authorization", "Bearer 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123drss");

		} catch (Exception e) {
			System.out.println(e);
		}

	}

	public Map<String, String> getValidHeader() {
		return validHeader;
	}

	public Map<String, String> getInValidHeader() {
		return inValidHeader;
	}

	// positive 200
	public Response getUserDetailsWithValidAuth(String owner, String repo) {

		String endpoint = Endpoints.SingleUser.GET_SINGLE_USER.replaceAll("\\{Owner\\}", owner).replaceAll("\\{Repo\\}",
				repo);

		Response response = HTTPSMethods.doGetCall(getValidHeader(), endpoint);

		return response;

	}

	// 401
	public Response getUserDetailsWithInValidAuth(String owner, String repo) {

		String endpoint = Endpoints.SingleUser.GET_SINGLE_USER.replaceAll("\\{Owner\\}", owner).replaceAll("\\{Repo\\}",
				repo);

		Response response = HTTPSMethods.doGetCall(getInValidHeader(), endpoint);

		return response;

	}

}